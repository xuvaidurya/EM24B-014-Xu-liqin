{
  "hash": "fcec8d8577e419f1703dcf3f05eabec8",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"03_Visualization -> Scores\"\noutput: \n  html_document:\n    toc: FALSE\n---\n\n\n\n\n### Introduction:\n\nThis time you will create the data.\n\n***Exercise based on [Chris Albon](http://chrisalbon.com/) work, the credits belong to him.***\n\n### Step 1. Import the necessary libraries\n\n::: {#4211336d .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n%matplotlib inline\n```\n:::\n\n\n### Step 2. Create the DataFrame that should look like the one below.\n\n::: {#14b4ea53 .cell execution_count=2}\n``` {.python .cell-code}\nraw_data = {'first_name': ['Jason', 'Molly', 'Tina', 'Jake', 'Amy'], \n            'last_name': ['Miller', 'Jacobson', 'Ali', 'Milner', 'Cooze'], \n            'female': [0, 1, 1, 0, 1],\n            'age': [42, 52, 36, 24, 73], \n            'preTestScore': [4, 24, 31, 2, 3],\n            'postTestScore': [25, 94, 57, 62, 70]}\n\ndf = pd.DataFrame(raw_data, columns = ['first_name', 'last_name', 'age', 'female', 'preTestScore', 'postTestScore'])\n\ndf\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>first_name</th>\n      <th>last_name</th>\n      <th>age</th>\n      <th>female</th>\n      <th>preTestScore</th>\n      <th>postTestScore</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Jason</td>\n      <td>Miller</td>\n      <td>42</td>\n      <td>0</td>\n      <td>4</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Molly</td>\n      <td>Jacobson</td>\n      <td>52</td>\n      <td>1</td>\n      <td>24</td>\n      <td>94</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Tina</td>\n      <td>Ali</td>\n      <td>36</td>\n      <td>1</td>\n      <td>31</td>\n      <td>57</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Jake</td>\n      <td>Milner</td>\n      <td>24</td>\n      <td>0</td>\n      <td>2</td>\n      <td>62</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Amy</td>\n      <td>Cooze</td>\n      <td>73</td>\n      <td>1</td>\n      <td>3</td>\n      <td>70</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n### Step 3. Create a Scatterplot of preTestScore and postTestScore, with the size of each point determined by age\n#### Hint: Don't forget to place the labels\n\n::: {#5de0d534 .cell execution_count=3}\n``` {.python .cell-code}\nplt.scatter(df.preTestScore, df.postTestScore, s=df.age)\n\n#set labels and titles\nplt.title(\"preTestScore x postTestScore\")\nplt.xlabel('preTestScore')\nplt.ylabel('preTestScore')\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```\nText(0, 0.5, 'preTestScore')\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](Scores_files/figure-html/cell-4-output-2.png){width=585 height=449}\n:::\n:::\n\n\n### Step 4. Create a Scatterplot of preTestScore and postTestScore.\n### This time the size should be 4.5 times the postTestScore and the color determined by sex\n\n::: {#076a99dd .cell execution_count=4}\n``` {.python .cell-code}\nplt.scatter(df.preTestScore, df.postTestScore, s= df.postTestScore * 4.5, c = df.female)\n\n#set labels and titles\nplt.title(\"preTestScore x postTestScore\")\nplt.xlabel('preTestScore')\nplt.ylabel('preTestScore')\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```\nText(0, 0.5, 'preTestScore')\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](Scores_files/figure-html/cell-5-output-2.png){width=585 height=449}\n:::\n:::\n\n\n### BONUS: Create your own question and answer it.\n\n::: {#383ab6a4 .cell execution_count=5}\n``` {.python .cell-code}\n# 问题：柱状图显示所有学生年龄\n# Question: The bar chart displays the age of all students\n\n# 回答，answer\n# 绘制年龄的柱状图\nplt.figure(figsize=(10, 6))\nplt.bar(df['first_name'] + ' ' + df['last_name'], df['age'], color='skyblue')\nplt.xlabel('name')\nplt.ylabel('age')\nplt.title('age of all students')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](Scores_files/figure-html/cell-6-output-1.png){width=808 height=523}\n:::\n:::\n\n\n",
    "supporting": [
      "Scores_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}