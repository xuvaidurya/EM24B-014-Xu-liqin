{
  "hash": "40183a77de4aad8771739c1a2ec46b28",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Xuliqin Practice1127-2\"\noutput: \n  html_document:\n    toc: FALSE\n---\n\n::: {#5cd3baa3 .cell execution_count=1}\n``` {.python .cell-code}\nfrom bs4 import BeautifulSoup\nimport requests\nimport re\nimport pandas as pd\n```\n:::\n\n\n::: {#ef76af59 .cell execution_count=2}\n``` {.python .cell-code}\n# Downloading imdb top 250 movie's data\nurl = 'http://www.imdb.com/chart/top'\nresponse = requests.get(url)\nsoup = BeautifulSoup(response.text, \"html.parser\")\n```\n:::\n\n\n::: {#ba3d682e .cell execution_count=3}\n``` {.python .cell-code}\nmovies = soup.select('td.titleColumn')\ncrew = [a.attrs.get('title') for a in soup.select('td.titleColumn a')]\nratings = [b.attrs.get('data-value')\n\t\tfor b in soup.select('td.posterColumn span[name=ir]')]\n```\n:::\n\n\n::: {#ab978eb9 .cell execution_count=4}\n``` {.python .cell-code}\n# create a empty list for storing\n# movie information\nlist = []\n\n# Iterating over movies to extract\n# each movie's details\nfor index in range(0, len(movies)):\n\t\n\t# Separating movie into: 'place',\n\t# 'title', 'year'\n\tmovie_string = movies[index].get_text()\n\tmovie = (' '.join(movie_string.split()).replace('.', ''))\n\tmovie_title = movie[len(str(index))+1:-7]\n\tyear = re.search(r'\\((.*?)\\)', movie_string).group(1)\n\tplace = movie[:len(str(index))-(len(movie))]\n\tdata = {\"place\": place,\n\t\t\t\"movie_title\": movie_title,\n\t\t\t\"rating\": ratings[index],\n\t\t\t\"year\": year,\n\t\t\t\"star_cast\": crew[index],\n\t\t\t}\n\tlist.append(data)\n```\n:::\n\n\n::: {#af50f01d .cell execution_count=5}\n``` {.python .cell-code}\nfor movie in list:\n    print(\n        movie[\"place\"],\n        \"-\",\n        movie[\"movie_title\"],\n        \"(\" + movie[\"year\"] + \") -\",\n        \"Starring:\",\n        movie[\"star_cast\"],\n        movie[\"rating\"],\n    )\n```\n:::\n\n\n::: {#b21fbce4 .cell execution_count=6}\n``` {.python .cell-code}\n#saving the list as dataframe\n#then converting into .csv file\ndf = pd.DataFrame(list)\ndf.to_csv('./file/imdb_top_250_movies.csv',index=False)\n```\n:::\n\n\n::: {#da591524 .cell execution_count=7}\n``` {.python .cell-code}\n# Downloading imdb top 250 movie's data\nurl = 'http://www.imdb.com/chart/top'\nresponse = requests.get(url)\nsoup = BeautifulSoup(response.text, \"html.parser\")\nmovies = soup.select('td.titleColumn')\ncrew = [a.attrs.get('title') for a in soup.select('td.titleColumn a')]\nratings = [b.attrs.get('data-value')\n\t\tfor b in soup.select('td.posterColumn span[name=ir]')]\n\n\n\n\n# create a empty list for storing\n# movie information\nlist = []\n\n# Iterating over movies to extract\n# each movie's details\nfor index in range(0, len(movies)):\n\t\n\t# Separating movie into: 'place',\n\t# 'title', 'year'\n\tmovie_string = movies[index].get_text()\n\tmovie = (' '.join(movie_string.split()).replace('.', ''))\n\tmovie_title = movie[len(str(index))+1:-7]\n\tyear = re.search(r'\\((.*?)\\)', movie_string).group(1)\n\tplace = movie[:len(str(index))-(len(movie))]\n\tdata = {\"place\": place,\n\t\t\t\"movie_title\": movie_title,\n\t\t\t\"rating\": ratings[index],\n\t\t\t\"year\": year,\n\t\t\t\"star_cast\": crew[index],\n\t\t\t}\n\tlist.append(data)\n\n# printing movie details with its rating.\nfor movie in list:\n\tprint(movie['place'], '-', movie['movie_title'], '('+movie['year'] +\n\t\t') -', 'Starring:', movie['star_cast'], movie['rating'])\n\n\n##.......##\ndf = pd.DataFrame(list)\ndf.to_csv('./file/imdb_top_250_movies.csv',index=False)\n```\n:::\n\n\n",
    "supporting": [
      "practice1127-2_files"
    ],
    "filters": [],
    "includes": {}
  }
}