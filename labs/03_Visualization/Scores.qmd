---
title: "03_Visualization -> Scores"
output: 
  html_document:
    toc: FALSE
---

### Introduction:

This time you will create the data.

***Exercise based on [Chris Albon](http://chrisalbon.com/) work, the credits belong to him.***

### Step 1. Import the necessary libraries

```{python}
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

%matplotlib inline
```

### Step 2. Create the DataFrame that should look like the one below.
```{python}
raw_data = {'first_name': ['Jason', 'Molly', 'Tina', 'Jake', 'Amy'], 
            'last_name': ['Miller', 'Jacobson', 'Ali', 'Milner', 'Cooze'], 
            'female': [0, 1, 1, 0, 1],
            'age': [42, 52, 36, 24, 73], 
            'preTestScore': [4, 24, 31, 2, 3],
            'postTestScore': [25, 94, 57, 62, 70]}

df = pd.DataFrame(raw_data, columns = ['first_name', 'last_name', 'age', 'female', 'preTestScore', 'postTestScore'])

df
```

### Step 3. Create a Scatterplot of preTestScore and postTestScore, with the size of each point determined by age
#### Hint: Don't forget to place the labels
```{python}
plt.scatter(df.preTestScore, df.postTestScore, s=df.age)

#set labels and titles
plt.title("preTestScore x postTestScore")
plt.xlabel('preTestScore')
plt.ylabel('preTestScore')
```

### Step 4. Create a Scatterplot of preTestScore and postTestScore.
### This time the size should be 4.5 times the postTestScore and the color determined by sex
```{python}
plt.scatter(df.preTestScore, df.postTestScore, s= df.postTestScore * 4.5, c = df.female)

#set labels and titles
plt.title("preTestScore x postTestScore")
plt.xlabel('preTestScore')
plt.ylabel('preTestScore')
```

### BONUS: Create your own question and answer it.

Question:
Create a Scatterplot of preTestScore and postTestScore.
This time the size should be 6 times the pre-test score and the colour is determined by age.
```{python}
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

data = {
    'preTestScore': [85, 90, 78, 92, 88],
    'postTestScore': [90, 95, 82, 96, 92],
    'age': [20, 22, 19, 23, 21]
}
df = pd.DataFrame(data)

sizes = 6 * df['preTestScore']

plt.scatter(df['preTestScore'], df['postTestScore'], s=sizes, c=df['age'], cmap='viridis')

plt.colorbar(label='Age')

plt.title("Scatterplot of preTestScore vs postTestScore")
plt.xlabel('preTestScore')
plt.ylabel('postTestScore')

plt.show()
```